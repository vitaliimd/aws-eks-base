controller:
  service:
    targetPorts:
      http: http
      https: http
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '60'
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ${ssl_cert}
      service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: ELBSecurityPolicy-TLS-1-2-2017-01
      external-dns.alpha.kubernetes.io/hostname: ${hostname}.
  publishService:
    enabled: true

  config:
    server-tokens: "false"
    use-forwarded-headers: "true"
    set-real-ip-from: "${proxy_real_ip_cidr}"

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

  podAnnotations:
    co.elastic.logs/module: nginx
    co.elastic.logs/fileset.stdout: ingress_controller
    co.elastic.logs/fileset.stderr: error

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node.kubernetes.io/lifecycle
            operator: In
            values:
              - ondemand

rbac:
  create: true
